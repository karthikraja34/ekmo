[{"D:\\Workspace\\ekmo\\src\\index.js":"1","D:\\Workspace\\ekmo\\src\\reportWebVitals.js":"2","D:\\Workspace\\ekmo\\src\\App.js":"3","D:\\Workspace\\ekmo\\src\\components\\Main.jsx":"4","D:\\Workspace\\ekmo\\src\\utils\\misc.js":"5","D:\\Workspace\\ekmo\\src\\assets\\loading.js":"6","D:\\Workspace\\ekmo\\src\\templates\\default\\template.jsx":"7"},{"size":517,"mtime":1612461575294,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1612461575295,"results":"10","hashOfConfig":"9"},{"size":367,"mtime":1612461575292,"results":"11","hashOfConfig":"9"},{"size":4529,"mtime":1615547386243,"results":"12","hashOfConfig":"9"},{"size":1137,"mtime":1615547331086,"results":"13","hashOfConfig":"9"},{"size":535,"mtime":1613439130602,"results":"14","hashOfConfig":"9"},{"size":3262,"mtime":1615547874434,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"651u82",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\ekmo\\src\\index.js",[],["32","33"],"D:\\Workspace\\ekmo\\src\\reportWebVitals.js",[],"D:\\Workspace\\ekmo\\src\\App.js",[],"D:\\Workspace\\ekmo\\src\\components\\Main.jsx",[],"D:\\Workspace\\ekmo\\src\\utils\\misc.js",["34"],"import Handlebars from \"handlebars\";\r\nimport createDOMPurify from 'dompurify'\r\n\r\n\r\nconst DOMPurify = createDOMPurify(window)\r\n\r\nHandlebars.registerHelper('odd', function(conditional) {\r\n  return conditional % 2;\r\n});\r\n\r\nexport function renderHandleBar(rawHtml, context={}) {\r\n  const html = Handlebars.compile(rawHtml)(context)\r\n  return DOMPurify.sanitize(html)\r\n}\r\n\r\nexport function extractContext(data, previewMode = false) {\r\n  const context = {}\r\n  const type_to_extract = previewMode ? \"output\" : \"input\"\r\n  for (const property in data) {\r\n    var entity = data[property]\r\n    if (entity.hasOwnProperty(\"value\")) {\r\n      context[property] = renderHandleBar(entity[type_to_extract], {\"value\": entity.value})\r\n    } else if (Array.isArray(entity)) {\r\n      var new_entity = []\r\n      entity.forEach((value, i) => {\r\n        var new_obj = {}\r\n          for (const subProperty in value) {\r\n            var subEntity = value[subProperty]\r\n            new_obj[subProperty] = renderHandleBar(subEntity[type_to_extract], {\"value\": subEntity.value, \"index\": i})\r\n          }\r\n          new_entity.push(new_obj)\r\n      })\r\n      context[property] = new_entity\r\n    }\r\n  }\r\n  context[\"previewMode\"] = previewMode\r\n  return context\r\n}","D:\\Workspace\\ekmo\\src\\assets\\loading.js",[],"D:\\Workspace\\ekmo\\src\\templates\\default\\template.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":25,"column":22,"nodeType":"41","messageId":"42","endLine":32,"endColumn":8},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'new_entity'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]